"""
This type stub file was generated by pyright.
"""

import atexit
from typing import Any

from urllib3.poolmanager import PoolManager
from urllib3.response import HTTPResponse

logger = ...
DEFAULT_KEEP_INTERVAL = ...
DEFAULT_KEEP_COUNT = ...
DEFAULT_KEEP_IDLE = ...
SOCKET_TCP = ...
core_socket_options = ...
_proxy_managers = ...
all_managers = ...

@atexit.register
def close_managers():  # -> None:
    ...
def get_pool_manager_options(
    keep_interval: int = ...,
    keep_count: int = ...,
    keep_idle: int = ...,
    ca_cert: str = ...,
    verify: bool = ...,
    client_cert: str = ...,
    client_cert_key: str = ...,
    **options,
) -> dict[str, Any]: ...
def get_pool_manager(
    keep_interval: int = ...,
    keep_count: int = ...,
    keep_idle: int = ...,
    ca_cert: str = ...,
    verify: bool = ...,
    client_cert: str = ...,
    client_cert_key: str = ...,
    http_proxy: str = ...,
    https_proxy: str = ...,
    **options,
):  # -> ProxyManager | PoolManager:
    ...
def check_conn_expiration(manager: PoolManager):  # -> None:
    ...
def get_proxy_manager(host: str, http_proxy):  # -> ProxyManager | PoolManager:
    ...
def get_response_data(response: HTTPResponse) -> bytes: ...
def check_env_proxy(scheme: str, host: str, port: int) -> str | None: ...

_default_pool_manager = ...

def default_pool_manager():  # -> ProxyManager | PoolManager:
    ...

class ResponseSource:
    def __init__(self, response: HTTPResponse, chunk_size: int = ...) -> None: ...
    def close(self):  # -> None:
        ...
