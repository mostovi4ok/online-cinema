"""
This type stub file was generated by pyright.
"""

from collections.abc import Generator, Iterable, Sequence
from typing import TYPE_CHECKING, Any, NamedTuple

from clickhouse_connect.datatypes.base import ClickHouseType
from clickhouse_connect.driver.context import BaseQueryContext

if TYPE_CHECKING: ...
logger = ...
DEFAULT_BLOCK_BYTES = ...

class InsertBlock(NamedTuple):
    prefix: bytes
    column_count: int
    row_count: int
    column_names: Iterable[str]
    column_types: Iterable[ClickHouseType]
    column_data: Iterable[Sequence[Any]]

class InsertContext(BaseQueryContext):
    """
    Reusable Argument/parameter object for inserts.
    """

    def __init__(
        self,
        table: str,
        column_names: Sequence[str],
        column_types: Sequence[ClickHouseType],
        data: Any = ...,
        column_oriented: bool | None = ...,
        settings: dict[str, Any] | None = ...,
        compression: str | bool | None = ...,
        query_formats: dict[str, str] | None = ...,
        column_formats: dict[str, str | dict[str, str]] | None = ...,
        block_size: int | None = ...,
    ) -> None: ...
    @property
    def empty(self) -> bool: ...
    @property
    def data(self):  # -> Any:
        ...
    @data.setter
    def data(self, data: Any):  # -> None:
        ...
    def next_block(self) -> Generator[InsertBlock, None, None]: ...
