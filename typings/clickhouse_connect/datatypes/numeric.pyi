"""
This type stub file was generated by pyright.
"""

import decimal

from clickhouse_connect.datatypes.base import ArrayType, ClickHouseType, TypeDef

class Int8(ArrayType):
    _array_type = ...
    np_type = ...

class UInt8(ArrayType):
    _array_type = ...
    np_type = ...

class Int16(ArrayType):
    _array_type = ...
    np_type = ...

class UInt16(ArrayType):
    _array_type = ...
    np_type = ...

class Int32(ArrayType):
    _array_type = ...
    np_type = ...

class UInt32(ArrayType):
    _array_type = ...
    np_type = ...

class Int64(ArrayType):
    _array_type = ...
    np_type = ...

class UInt64(ArrayType):
    valid_formats = ...
    _array_type = ...
    np_type = ...
    python_type = int

class BigInt(ClickHouseType, registered=False):
    _signed = ...
    valid_formats = ...

class Int128(BigInt):
    byte_size = ...
    _signed = ...

class UInt128(BigInt):
    byte_size = ...
    _signed = ...

class Int256(BigInt):
    byte_size = ...
    _signed = ...

class UInt256(BigInt):
    byte_size = ...
    _signed = ...

class Float(ArrayType, registered=False):
    _array_type = ...
    python_type = float

class Float32(Float):
    np_type = ...

class Float64(Float):
    _array_type = ...
    np_type = ...

class Bool(ClickHouseType):
    np_type = ...
    python_type = bool
    byte_size = ...

class Boolean(Bool): ...

class Enum(ClickHouseType):
    __slots__ = ...
    _array_type = ...
    valid_formats = ...
    python_type = str
    def __init__(self, type_def: TypeDef) -> None: ...

class Enum8(Enum):
    _array_type = ...
    byte_size = ...

class Enum16(Enum):
    _array_type = ...
    byte_size = ...

class Decimal(ClickHouseType):
    __slots__ = ...
    python_type = decimal.Decimal
    dec_size = ...
    @classmethod
    def build(cls: type[Decimal], type_def: TypeDef):  # -> BigDecimal | Decimal:
        ...
    def __init__(self, type_def: TypeDef, prec, size, scale) -> None: ...

class BigDecimal(Decimal, registered=False): ...

class Decimal32(Decimal):
    dec_size = ...

class Decimal64(Decimal):
    dec_size = ...

class Decimal128(BigDecimal):
    dec_size = ...

class Decimal256(BigDecimal):
    dec_size = ...
