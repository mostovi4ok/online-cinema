"""
This type stub file was generated by pyright.
"""

from abc import abstractmethod
from collections.abc import Mapping
from datetime import datetime
from typing import Any

from beanie.odm.bulk import BulkWriter
from beanie.odm.fields import ExpressionField
from motor.motor_asyncio import AsyncIOMotorClientSession

class UpdateMethods:
    """
    Update methods
    """

    @abstractmethod
    def update(
        self,
        *args: Mapping[str, Any],
        session: AsyncIOMotorClientSession | None = ...,
        bulk_writer: BulkWriter | None = ...,
        **kwargs,
    ):  # -> Self:
        ...
    def set(
        self,
        expression: dict[ExpressionField | str | Any, Any],
        session: AsyncIOMotorClientSession | None = ...,
        bulk_writer: BulkWriter | None = ...,
        **kwargs,
    ):  # -> Self:
        """
        Set values

        Example:
        ```python
        class Sample(Document):
            one: int

        await Document.find(Sample.one == 1).set({Sample.one: 100})
        ```

        Uses [Set operator](operators/update.md#set)

        :param expression: Dict[Union[ExpressionField, str, Any], Any] - keys and
        values to set
        :param session: Optional[AsyncIOMotorClientSession] - motor session
        :param bulk_writer: Optional[BulkWriter] - bulk writer
        :return: self

        """

    def current_date(
        self,
        expression: dict[datetime | ExpressionField | str, Any],
        session: AsyncIOMotorClientSession | None = ...,
        bulk_writer: BulkWriter | None = ...,
        **kwargs,
    ):  # -> Self:
        """
        Set current date

        Uses [CurrentDate operator](operators/update.md#currentdate)

        :param expression: Dict[Union[datetime, ExpressionField, str], Any]
        :param session: Optional[AsyncIOMotorClientSession] - motor session
        :param bulk_writer: Optional[BulkWriter] - bulk writer
        :return: self
        """

    def inc(
        self,
        expression: dict[ExpressionField | float | int | str, Any],
        session: AsyncIOMotorClientSession | None = ...,
        bulk_writer: BulkWriter | None = ...,
        **kwargs,
    ):  # -> Self:
        """
        Increment

        Example:
        ```python
        class Sample(Document):
            one: int

        await Document.find(Sample.one == 1).inc({Sample.one: 100})
        ```

        Uses [Inc operator](operators/update.md#inc)

        :param expression: Dict[Union[ExpressionField, float, int, str], Any]
        :param session: Optional[AsyncIOMotorClientSession] - motor session
        :param bulk_writer: Optional[BulkWriter] - bulk writer
        :return: self

        """
