"""
This type stub file was generated by pyright.
"""

from collections.abc import Mapping
from typing import Any

from beanie.odm.utils.pydantic import IS_PYDANTIC_V2
from motor.motor_asyncio import AsyncIOMotorClientSession
from pydantic import BaseModel
from pymongo import DeleteMany, DeleteOne, InsertOne, ReplaceOne, UpdateMany, UpdateOne
from pymongo.results import BulkWriteResult

if IS_PYDANTIC_V2: ...

class Operation(BaseModel):
    operation: (
        type[InsertOne] | type[DeleteOne] | type[DeleteMany] | type[ReplaceOne] | type[UpdateOne] | type[UpdateMany]
    )
    first_query: Mapping[str, Any]
    second_query: dict[str, Any] | None = ...
    pymongo_kwargs: dict[str, Any] = ...
    object_class: type
    if IS_PYDANTIC_V2:
        model_config = ...
    else:
        class Config:
            arbitrary_types_allowed = ...

class BulkWriter:
    def __init__(self, session: AsyncIOMotorClientSession | None = ..., ordered: bool = ...) -> None: ...
    async def __aenter__(self):  # -> Self:
        ...
    async def __aexit__(self, exc_type, exc, tb):  # -> None:
        ...
    async def commit(self) -> BulkWriteResult | None:
        """
        Commit all the operations to the database
        :return:
        """

    def add_operation(self, operation: Operation):  # -> None:
        ...
