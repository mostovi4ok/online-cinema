"""
This type stub file was generated by pyright.
"""

from crc32c import crc32c as crc32c_c

def encode_varint(value, write):  # -> int:
    """Encode an integer to a varint presentation. See
    https://developers.google.com/protocol-buffers/docs/encoding?csw=1#varints
    on how those can be produced.

    Arguments:
            value (int): Value to encode
            write (function): Called per byte that needs to be writen

    Returns:
            int: Number of bytes written

    """

def size_of_varint(value):  # -> Literal[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]:
    """Number of bytes needed to encode an integer in variable-length format."""

def decode_varint(buffer, pos=...):  # -> tuple[Any, int] | None:
    """Decode an integer from a varint presentation. See
    https://developers.google.com/protocol-buffers/docs/encoding?csw=1#varints
    on how those can be produced.

    Arguments:
            buffer (bytearray): buffer to read from.
            pos (int): optional position to read from

    Returns:
            (int, int): Decoded int value and next read position

    """

_crc32c = ...
if crc32c_c is not None:
    _crc32c = ...

def calc_crc32c(memview, _crc32c=...):  # -> int:
    """Calculate CRC-32C (Castagnoli) checksum over a memoryview of data"""

def calc_crc32(memview):  # -> int:
    """Calculate simple CRC-32 checksum over a memoryview of data"""
