"""
This type stub file was generated by pyright.
"""

import sys
from abc import ABC

from ..exceptions import ResponseError
from ..typing import EncodableT

if sys.version_info.major >= 3 and sys.version_info.minor >= 11: ...
else: ...
MODULE_LOAD_ERROR = ...
NO_SUCH_MODULE_ERROR = ...
MODULE_UNLOAD_NOT_POSSIBLE_ERROR = ...
MODULE_EXPORTS_DATA_TYPES_ERROR = ...
NO_AUTH_SET_ERROR = ...

class BaseParser(ABC):
    EXCEPTION_CLASSES = ...
    @classmethod
    def parse_error(
        cls, response
    ):  # -> AuthenticationError | AuthenticationWrongNumberOfArgsError | BusyLoadingError | ConnectionError | ExecAbortError | ModuleError | NoPermissionError | NoScriptError | OutOfMemoryError | ReadOnlyError | ResponseError:
        """Parse an error response"""

    def on_disconnect(self): ...
    def on_connect(self, connection): ...

class _RESPBase(BaseParser):
    """Base class for sync-based resp parsing"""

    def __init__(self, socket_read_size) -> None: ...
    def __del__(self):  # -> None:
        ...
    def on_connect(self, connection):  # -> None:
        """Called when the socket connects"""

    def on_disconnect(self):  # -> None:
        """Called when the socket disconnects"""

    def can_read(self, timeout):  # -> bool | None:
        ...

class AsyncBaseParser(BaseParser):
    """Base parsing class for the python-backed async parser"""

    __slots__ = ...
    def __init__(self, socket_read_size: int) -> None: ...
    async def can_read_destructive(self) -> bool: ...
    async def read_response(
        self, disable_decoding: bool = ...
    ) -> EncodableT | ResponseError | None | list[EncodableT]: ...

class _AsyncRESPBase(AsyncBaseParser):
    """Base class for async resp parsing"""

    __slots__ = ...
    def __init__(self, socket_read_size: int) -> None: ...
    def on_connect(self, connection):  # -> None:
        """Called when the stream connects"""

    def on_disconnect(self):  # -> None:
        """Called when the stream disconnects"""

    async def can_read_destructive(self) -> bool: ...
