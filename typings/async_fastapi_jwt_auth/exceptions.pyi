"""
This type stub file was generated by pyright.
"""

class AuthJWTException(Exception):
    """
    Base except which all fastapi_jwt_auth errors extend
    """

    status_code: int = ...
    message: str = ...

class InvalidHeaderError(AuthJWTException):
    """
    An error getting jwt in header or jwt header information from a request
    """

    def __init__(self, status_code: int, message: str) -> None: ...

class JWTDecodeError(AuthJWTException):
    """
    An error decoding a JWT
    """

    def __init__(self, status_code: int, message: str) -> None: ...

class CSRFError(AuthJWTException):
    """
    An error with CSRF protection
    """

    def __init__(self, status_code: int, message: str) -> None: ...

class MissingTokenError(AuthJWTException):
    """
    Error raised when token not found
    """

    def __init__(self, status_code: int, message: str) -> None: ...

class RevokedTokenError(AuthJWTException):
    """
    Error raised when a revoked token attempt to access a protected endpoint
    """

    def __init__(self, status_code: int, message: str) -> None: ...

class AccessTokenRequired(AuthJWTException):
    """
    Error raised when a valid, non-access JWT attempt to access an endpoint
    protected by jwt_required, jwt_optional, fresh_jwt_required
    """

    def __init__(self, status_code: int, message: str) -> None: ...

class RefreshTokenRequired(AuthJWTException):
    """
    Error raised when a valid, non-refresh JWT attempt to access an endpoint
    protected by jwt_refresh_token_required
    """

    def __init__(self, status_code: int, message: str) -> None: ...

class FreshTokenRequired(AuthJWTException):
    """
    Error raised when a valid, non-fresh JWT attempt to access an endpoint
    protected by fresh_jwt_required
    """

    def __init__(self, status_code: int, message: str) -> None: ...
