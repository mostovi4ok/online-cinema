"""
This type stub file was generated by pyright.
"""

from enum import Enum

from aiokafka.structs import TopicPartition

PidAndEpoch = ...
NO_PRODUCER_ID = ...
NO_PRODUCER_EPOCH = ...

class SubscriptionType(Enum):
    NONE = ...
    AUTO_TOPICS = ...
    AUTO_PATTERN = ...
    USER_ASSIGNED = ...

class TransactionResult:
    ABORT = ...
    COMMIT = ...

class TransactionState(Enum):
    UNINITIALIZED = ...
    READY = ...
    IN_TRANSACTION = ...
    COMMITTING_TRANSACTION = ...
    ABORTING_TRANSACTION = ...
    ABORTABLE_ERROR = ...
    FATAL_ERROR = ...
    @classmethod
    def is_transition_valid(cls, source, target):  # -> bool:
        ...

class TransactionManager:
    def __init__(self, transactional_id, transaction_timeout_ms) -> None: ...
    def set_pid_and_epoch(self, pid: int, epoch: int):  # -> None:
        ...
    def has_pid(self): ...
    async def wait_for_pid(self):  # -> None:
        ...
    def sequence_number(self, tp: TopicPartition):  # -> int:
        ...
    def increment_sequence_number(self, tp: TopicPartition, increment: int):  # -> None:
        ...
    @property
    def producer_id(self): ...
    @property
    def producer_epoch(self): ...
    def begin_transaction(self):  # -> None:
        ...
    def committing_transaction(self):  # -> None:
        ...
    def aborting_transaction(self):  # -> None:
        ...
    def complete_transaction(self):  # -> None:
        ...
    def error_transaction(self, exc):  # -> None:
        ...
    def fatal_error(self, exc):  # -> None:
        ...
    def maybe_add_partition_to_txn(self, tp: TopicPartition):  # -> None:
        ...
    def add_offsets_to_txn(self, offsets, group_id):  # -> Future[Any]:
        ...
    def is_in_transaction(self):  # -> bool:
        ...
    def partitions_to_add(self):  # -> set[Any]:
        ...
    def consumer_group_to_add(self):  # -> None:
        ...
    def offsets_to_commit(self):  # -> tuple[Any, Any] | None:
        ...
    def partition_added(self, tp: TopicPartition):  # -> None:
        ...
    def consumer_group_added(self, group_id):  # -> None:
        ...
    def offset_committed(self, tp, offset, group_id):  # -> None:
        ...
    @property
    def txn_partitions(self):  # -> set[Any]:
        ...
    def needs_transaction_commit(self):  # -> Literal[1, 0] | None:
        ...
    def is_empty_transaction(self):  # -> bool:
        ...
    def is_fatal_error(self):  # -> bool:
        ...
    def wait_for_transaction_end(self):  # -> Future[Any] | None:
        ...
    def notify_task_waiter(self):  # -> None:
        ...
    def make_task_waiter(self):  # -> Future[Any]:
        ...
