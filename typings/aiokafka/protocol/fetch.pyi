"""
This type stub file was generated by pyright.
"""

from .api import Request, Response

class FetchResponse_v0(Response):
    API_KEY = ...
    API_VERSION = ...
    SCHEMA = ...
    topics: list[tuple[str, list[tuple[int, int, int, bytes]]]] | None

class FetchResponse_v1(Response):
    API_KEY = ...
    API_VERSION = ...
    SCHEMA = ...

class FetchResponse_v2(Response):
    API_KEY = ...
    API_VERSION = ...
    SCHEMA = ...

class FetchResponse_v3(Response):
    API_KEY = ...
    API_VERSION = ...
    SCHEMA = ...

class FetchResponse_v4(Response):
    API_KEY = ...
    API_VERSION = ...
    SCHEMA = ...

class FetchResponse_v5(Response):
    API_KEY = ...
    API_VERSION = ...
    SCHEMA = ...

class FetchResponse_v6(Response):
    """
    Same as FetchResponse_v5. The version number is bumped up to indicate that the
    client supports KafkaStorageException. The KafkaStorageException will be translated
    to NotLeaderForPartitionException in the response if version <= 5
    """

    API_KEY = ...
    API_VERSION = ...
    SCHEMA = ...

class FetchResponse_v7(Response):
    """
    Add error_code and session_id to response
    """

    API_KEY = ...
    API_VERSION = ...
    SCHEMA = ...

class FetchResponse_v8(Response):
    API_KEY = ...
    API_VERSION = ...
    SCHEMA = ...

class FetchResponse_v9(Response):
    API_KEY = ...
    API_VERSION = ...
    SCHEMA = ...

class FetchResponse_v10(Response):
    API_KEY = ...
    API_VERSION = ...
    SCHEMA = ...

class FetchResponse_v11(Response):
    API_KEY = ...
    API_VERSION = ...
    SCHEMA = ...

class FetchRequest_v0(Request):
    API_KEY = ...
    API_VERSION = ...
    RESPONSE_TYPE = ...
    SCHEMA = ...
    min_bytes: int | None

class FetchRequest_v1(Request):
    API_KEY = ...
    API_VERSION = ...
    RESPONSE_TYPE = ...
    SCHEMA = ...

class FetchRequest_v2(Request):
    API_KEY = ...
    API_VERSION = ...
    RESPONSE_TYPE = ...
    SCHEMA = ...

class FetchRequest_v3(Request):
    API_KEY = ...
    API_VERSION = ...
    RESPONSE_TYPE = ...
    SCHEMA = ...

class FetchRequest_v4(Request):
    API_KEY = ...
    API_VERSION = ...
    RESPONSE_TYPE = ...
    SCHEMA = ...

class FetchRequest_v5(Request):
    API_KEY = ...
    API_VERSION = ...
    RESPONSE_TYPE = ...
    SCHEMA = ...

class FetchRequest_v6(Request):
    """
    The body of FETCH_REQUEST_V6 is the same as FETCH_REQUEST_V5. The version number is
    bumped up to indicate that the client supports KafkaStorageException. The
    KafkaStorageException will be translated to NotLeaderForPartitionException in the
    response if version <= 5
    """

    API_KEY = ...
    API_VERSION = ...
    RESPONSE_TYPE = ...
    SCHEMA = ...

class FetchRequest_v7(Request):
    """
    Add incremental fetch requests
    """

    API_KEY = ...
    API_VERSION = ...
    RESPONSE_TYPE = ...
    SCHEMA = ...

class FetchRequest_v8(Request):
    """
    bump used to indicate that on quota violation brokers send out responses before
    throttling.
    """

    API_KEY = ...
    API_VERSION = ...
    RESPONSE_TYPE = ...
    SCHEMA = ...

class FetchRequest_v9(Request):
    """
    adds the current leader epoch (see KIP-320)
    """

    API_KEY = ...
    API_VERSION = ...
    RESPONSE_TYPE = ...
    SCHEMA = ...

class FetchRequest_v10(Request):
    """
    bumped up to indicate ZStandard capability. (see KIP-110)
    """

    API_KEY = ...
    API_VERSION = ...
    RESPONSE_TYPE = ...
    SCHEMA = ...

class FetchRequest_v11(Request):
    """
    added rack ID to support read from followers (KIP-392)
    """

    API_KEY = ...
    API_VERSION = ...
    RESPONSE_TYPE = ...
    SCHEMA = ...

FetchRequest = ...
FetchResponse = ...
