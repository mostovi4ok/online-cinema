"""
This type stub file was generated by pyright.
"""

from collections.abc import Iterable, Sequence
from contextlib import contextmanager

from opentelemetry.trace import StatusCode

propagator = ...
_SUPPRESS_INSTRUMENTATION_KEY_PLAIN = ...

def extract_attributes_from_object(
    obj: any, attributes: Sequence[str], existing: dict[str, str] = ...
) -> dict[str, str]: ...
def http_status_to_status_code(status: int, allow_redirect: bool = ..., server_span: bool = ...) -> StatusCode:
    """Converts an HTTP status code to an OpenTelemetry canonical status code

    Args:
        status (int): HTTP status code

    """

def unwrap(obj, attr: str):  # -> None:
    """Given a function that was wrapped by wrapt.wrap_function_wrapper, unwrap it

    Args:
        obj: Object that holds a reference to the wrapped function
        attr (str): Name of the wrapped function

    """

def is_instrumentation_enabled() -> bool: ...
def is_http_instrumentation_enabled() -> bool: ...
@contextmanager
def suppress_instrumentation() -> Iterable[None]:
    """Suppress instrumentation within the context."""

@contextmanager
def suppress_http_instrumentation() -> Iterable[None]:
    """Suppress instrumentation within the context."""
